version: '3'

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
  iam:
    container_name: iam
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "5050:5050"
    depends_on:
      - database
    networks:
      - "picasso-network"

  database:
    container_name: database
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - TZ=Asia/Seoul
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data
    networks:
      picasso-network:

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    labels:
      - "name=redis"
      - "mode=standalone"
    command: redis-server /usr/local/conf/redis.conf
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


#version: '3'
#services:
#  nginx:
#    container_name: nginx
#    image: nginx:latest
#    ports:
#      - "80:80"
#    volumes:
#      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
#    depends_on:
#      - backend
#
#  backend:
#    container_name: sunnyside-backend
#    build:
#      context: .
#      dockerfile: ./Dockerfile
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#    networks:
#      - "sunnyside-network"
#
#  postgres:
#    container_name: sunnyside-db
#    image: postgres:latest
#    ports:
#      - "5432:5432"
#    environment:
#      - POSTGRES_USER=root
#      - POSTGRES_PASSWORD=root
#      - TZ=Asia/Seoul
#    volumes:
#      - ./data/postgres/:/var/lib/postgresql/data # TODO
#    networks:
#      - "sunnyside-network"
#
#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4
#    restart: unless-stopped
#    ports:
#      - "5555:80"
#    volumes:
#      - ./pgadmin:/var/lib/pgadmin
#    environment:
#      - PGADMIN_DEFAULT_EMAIL=example@pgadmin.com
#      - PGADMIN_DEFAULT_PASSWORD=pgadmin
#      - TZ=Asia/Seoul
#    depends_on:
#      - postgres
#
#  redis:
#    container_name: redis
#    image: redis:latest
#    restart: always
#    ports:
#      - "6379:6379"
#    volumes:
#      - ./redis/data:/data
#      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
#    labels:
#      - "name=redis"
#      - "mode=standalone"
#    command: redis-server /usr/local/conf/redis.conf
#
#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    networks:
#      - "sunnyside-network"
#
#  kafka:
#    image: wurstmeister/kafka:2.12-2.5.0
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - "sunnyside-network"
#
#networks:
#  sunnyside-network:
#    driver: bridge

networks:
  picasso-network: